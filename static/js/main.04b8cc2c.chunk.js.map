{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","hooks/http.hook.js","resources/img/loader.gif","components/spinner/spinner.js","resources/img/error.gif","components/errorMessage/errorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/Mainpage.js","components/comicsList/ComicsList.js","resources/img/UW.png","resources/img/x-men.png","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/singleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKEY","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","src","loader","alt","ErrorMessage","display","width","height","margin","objectFit","View","imgStyle","href","target","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharComponent","props","onCharSelected","activeElement","index","setActiveElement","ref","useRef","current","focus","CharList","chars","setChars","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","ended","length","charsOLd","console","log","item","renderItems","disabled","Skeleton","CharInfo","charId","sceleton","ErrorBoundary","state","info","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","setComics","comicsEnded","setComicsEnded","comicsOld","comicsItems","arr","renderComics","AppBanner","avengers","avengersLogo","ComicsPage","Page404","comic","SingleComicPage","comicId","useParams","setComic","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.04b8cc2c.chunk.js","sourcesContent":["import './appHeader.scss';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to='/'>\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink end to=\"/MarvelProject/\"\r\n                        style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}>\r\n                        Characters\r\n                    </NavLink></li>\r\n                    <li><NavLink to=\"/MarvelProject/comics\" style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit' })}>\r\n                        Comics\r\n                    </NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import { useHttp } from '../hooks/http.hook.js'\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError, setLoading } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKEY = 'apikey=05cc59364374d4f0369a60eed8bf2e89';\r\n    const _baseOffset = 197;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKEY}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKEY}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComics = async (offset = 12) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&offset=${offset}&limit=8&${_apiKEY}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKEY}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return { loading, error, getAllCharacters, getCharacter, setLoading, clearError, getComics, getComic }\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {\r\n        'Content-type': 'application/json'\r\n    }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError, setLoading }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/loader.a6a3a828.gif\";","import loader from '../../resources/img/loader.gif'\r\nimport './spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner__container\">\r\n            <img src={loader} alt=\"loader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from \"../../resources/img/error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={error} alt=\"error\" style={{\r\n            display: 'block', width: 250, height: 250, margin: '0 auto', objectFit: 'contain'\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState({});\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 6000);\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(error || loading) ? <View char={char} /> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br />\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\">\r\n                    <div className=\"inner\" onClick={() => updateChar()}>try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'contain' };\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n\r\n                    <a href={homepage} target='_blank' className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} target='_blank' className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nconst CharList = (props) => {\r\n\r\n\r\n    const [chars, setChars] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(197);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n    const { loading, error, getAllCharacters } = useMarvelService();\r\n    const [activeElement, setActiveElement] = useState(null);\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (chars) => {\r\n        let ended = false;\r\n        if (chars.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setChars(charsOLd => [...charsOLd, ...chars]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended)\r\n    }\r\n\r\n    const renderItems = (chars) => {\r\n        const items = chars.map((item, index) => {\r\n            return (\r\n                <CharComponent src={item.thumbnail}\r\n                    name={item.name}\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    onCharSelected={props.onCharSelected}\r\n                    setActiveElement={setActiveElement}\r\n                    activeElement={activeElement}\r\n                    index={index} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    console.log('render')\r\n\r\n    const items = renderItems(chars);\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\" >\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst CharComponent = (props) => {\r\n    const { src, name, id, onCharSelected, index, activeElement,\r\n        setActiveElement } = props;\r\n\r\n\r\n    const ref = useRef();\r\n\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'unset' };\r\n    }\r\n\r\n    const onClick = useCallback(() => {\r\n        onCharSelected(id);\r\n        setActiveElement(id);\r\n        ref.current.focus();\r\n    });\r\n\r\n    return (\r\n        <li onClick={onClick}\r\n            className={`char__item ${activeElement === id && 'char__item_selected'}`}\r\n            key={id}\r\n            ref={ref}>\r\n\r\n            <img src={src} alt={name} style={imgStyle} />\r\n            <div className=\"char__name\">{name}</div>\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import './charInfo.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst CharInfo = ({ charId }) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const { loading, error, getCharacter, setLoading } = useMarvelService();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        updateChar()\r\n    }, [charId]);\r\n\r\n\r\n    const updateChar = () => {\r\n\r\n        if (!charId) {\r\n            return\r\n        }\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n\r\n\r\n    const sceleton = char || loading || error ? null : <Skeleton />\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(error || loading || !char) ? <View char={char} /> : null;\r\n\r\n\r\n    return (\r\n        <div className=\"char__info\" >\r\n            {sceleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'contain' };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There are no comics for this hero'}\r\n                {\r\n                    comics.map((item, index) => {\r\n                        return (\r\n                            <li className=\"char__comics-item\" key={index}>\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <ErrorMessage />\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null)\r\n\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <CharList onCharSelected={onCharSelected} />\r\n\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\r\nimport uw from '../../resources/img/UW.png';\r\nimport xMen from '../../resources/img/x-men.png';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ComicsList = () => {\r\n    const { getComics, error, loading, clearError } = useMarvelService();\r\n\r\n    const [comics, setComics] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(12);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n    }, []);\r\n\r\n    const onRequest = (offset, initial) => {\r\n        clearError();\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getComics(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (comics) => {\r\n        let ended = false;\r\n        if (comics.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComics(comicsOld => [...comicsOld, ...comics]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(charEnded => ended);\r\n    }\r\n\r\n    const renderComics = (arr) => {\r\n        const items = arr.map((item, index) => {\r\n            return (\r\n                < li className=\"comics__item\" key={item.index}>\r\n                    <Link to={`${item.id}`} href={item.url}>\r\n                        <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\r\n                        <div className=\"comics__item-name\">{item.name}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link></li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const spinner = loading ? <Spinner /> : null\r\n    const comicsItems = renderComics(comics);\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {comicsItems}\r\n\r\n            <button onClick={() => onRequest(offset)}\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage />\r\n            <p style={{ 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px' }}>Page doesn't exist</p>\r\n            <Link style={{ 'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px' }} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    let { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { loading, error, getComic, setLoading, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        updateChar()\r\n    }, [comicId]);\r\n\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(error || loading || !comic) ? <View comic={comic} /> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst View = ({ comic }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">{language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to='/MarvelProject/comics' className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import AppHeader from \"../appHeader/AppHeader\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from \"../pages\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\" >\r\n                <AppHeader />\r\n                <main>\r\n                    <Routes>\r\n\r\n                        <Route path='/MarvelProject/comics' element={<ComicsPage />} />\r\n                        <Route path='/MarvelProject/comics/:comicId' element={<SingleComicPage />} />\r\n                        <Route path='/MarvelProject/' element={<MainPage />} />\r\n                        <Route path='/MarvelProject/*' element={<Page404 />}></Route>\r\n\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM\r\n  .createRoot(document.getElementById('root'))\r\n  .render(\r\n\r\n    <App />\r\n\r\n  );\r\n\r\n\r\n\r\n"],"sourceRoot":""}