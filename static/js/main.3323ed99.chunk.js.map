{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/loader.gif","components/spinner/spinner.js","resources/img/error.gif","components/errorMessage/errorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","resources/img/thor.jpeg","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKEY","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","src","loader","alt","ErrorMessage","error","style","display","width","height","margin","objectFit","RandomChar","props","state","loading","marvelService","onCharLoading","setState","onCharLoaded","onError","updateChar","Math","floor","random","then","catch","console","log","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","target","CharList","chars","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","ended","length","renderItems","item","index","onCharSelected","disabled","CharComponent","Skeleton","CharInfo","charId","prevProps","sceleton","ErrorBoundary","info","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3323ed99.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","export default class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKEY = 'apikey=05cc59364374d4f0369a60eed8bf2e89';\r\n    _baseOffset = 197;\r\n\r\n    getResourse = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKEY}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKEY}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/loader.a6a3a828.gif\";","import loader from '../../resources/img/loader.gif'\r\nimport './spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner__container\">\r\n            <img src={loader} alt=\"loader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from \"../../resources/img/error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={error} alt=\"error\" style={{\r\n            display: 'block', width: 250, height: 250, margin: '0 auto', objectFit: 'contain'\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('constructor');\r\n    }\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        console.log('mount');\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('update component');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('unmount');\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({ char, loading: false, error: false })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({ loading: false, error: true })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('render');\r\n        const { loading, char, error } = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(error || loading) ? <View char={char} /> : null;\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br />\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\">\r\n                        <div className=\"inner\" onClick={() => this.updateChar()}>try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'contain' };\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n\r\n                    <a href={homepage} target='_blank' className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} target='_blank' className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport { Component } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        chars: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 197,\r\n        charEnded: false\r\n    }\r\n\r\n    marvelService = new MarvelService()\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading()\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (chars) => {\r\n        let ended = false;\r\n        if (chars.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        this.setState((state) => ({\r\n            chars: [...state.chars, ...chars],\r\n            loading: false,\r\n            error: false,\r\n            newItemLoading: false,\r\n            offset: state.offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n\r\n    renderItems = (chars) => {\r\n        const items = chars.map((item, index) => {\r\n            return (\r\n                <CharComponent src={item.thumbnail}\r\n                    name={item.name}\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    onCharSelected={this.props.onCharSelected}\r\n                    index={index} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { chars, loading, error, newItemLoading, offset, charEnded } = this.state;\r\n        const items = this.renderItems(chars);\r\n\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error) ? items : null;\r\n        return (\r\n            <div className=\"char__list\" >\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                    onClick={() => this.onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst CharComponent = (props) => {\r\n    const { src, name, id, onCharSelected } = props;\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (src === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'unset' };\r\n    }\r\n\r\n    return (\r\n        <li className=\"char__item\" key={id} onClick={() => {\r\n            onCharSelected(id);\r\n        }}>\r\n            <img src={src} alt={name} style={imgStyle} />\r\n            <div className=\"char__name\">{name}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","import './charInfo.scss';\r\nimport thor from '../../resources/img/thor.jpeg';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport { Component } from 'react';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar()\r\n        }\r\n    }\r\n\r\n    updateChar = () => {\r\n        const { charId } = this.props;\r\n\r\n        if (!charId) {\r\n            return\r\n        }\r\n\r\n        this.onCharLoading();\r\n        this.marvelService.getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({ char, loading: false, error: false })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({ loading: false, error: true })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { char, loading, error } = this.state;\r\n\r\n        const sceleton = char || loading || error ? null : <Skeleton />\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(error || loading || !char) ? <View char={char} /> : null;\r\n\r\n\r\n        return (\r\n            <div className=\"char__info\" >\r\n                {sceleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectFit': 'contain' };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There are no comics for this hero'}\r\n                {\r\n                    comics.map((item, index) => {\r\n                        return (\r\n                            <li className=\"char__comics-item\" key={index}>\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <ErrorMessage />\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\nimport { Component } from \"react\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <AppHeader />\r\n                <main>\r\n\r\n                    <ErrorBoundary>\r\n                        <RandomChar />\r\n                    </ErrorBoundary>\r\n\r\n                    <div className=\"char__content\">\r\n\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected={this.onCharSelected} />\r\n                        </ErrorBoundary>\r\n\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar} />\r\n                        </ErrorBoundary>\r\n\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}